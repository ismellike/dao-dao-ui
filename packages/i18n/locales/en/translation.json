{
  "actionCategory": {
    "advancedDescription": "Execute custom actions and bulk import actions.",
    "advancedLabel": "Advanced",
    "authorizationsDescription": "Grant, revoke, and perform authorizations.",
    "authorizationsLabel": "Authorizations",
    "chainGovernanceDescription": "Participate in the blockchain's governance.",
    "chainGovernanceLabel": "Blockchain Governance",
    "daoAppearanceDescription": "Customize the appearance of this DAO's page.",
    "daoAppearanceLabel": "DAO Appearance",
    "daoGovernanceDescription_dao": "Configure how this DAO governs itself (for example: how voting works).",
    "daoGovernanceDescription_gov": "Manage the governance of DAOs.",
    "daoGovernanceDescription_wallet": "Manage the governance of DAOs.",
    "daoGovernanceLabel": "DAO Governance",
    "nftsDescription_dao": "Mint, transfer, burn, and display NFTs in this DAO's treasury.",
    "nftsDescription_gov": "Mint, transfer, and burn NFTs.",
    "nftsDescription_wallet": "Mint, transfer, and burn NFTs.",
    "nftsLabel": "NFTs",
    "pressDescription": "Publish, update, and remove posts.",
    "pressLabel": "Press",
    "smartContractingDescription": "Create, execute, and manage smart contracts.",
    "smartContractingLabel": "Smart Contracting",
    "treasuryDescription_dao": "Manage this DAO's treasury (for example, send payments, stake or swap tokens, etc.).",
    "treasuryDescription_gov": "Manage the community pool (for example, send payments, stake or swap tokens, etc.).",
    "treasuryDescription_wallet": "Manage your tokens (for example, send payments, stake or swap tokens, etc.).",
    "treasuryLabel_dao": "DAO Treasury",
    "treasuryLabel_gov": "Community Pool",
    "treasuryLabel_wallet": "Wallet"
  },
  "button": {
    "acceptTerms": "I accept the terms",
    "add": "Add",
    "addADescriptionOptional": "Add a description (optional)",
    "addAction": "Add action",
    "addAllowance": "Add allowance",
    "addAnAction": "Add an action",
    "addAnotherAction": "Add another {{action}} action",
    "addAttribute": "Add attribute",
    "addCollection": "Add collection",
    "addMember": "Add a member",
    "addMembers": "Add members",
    "addNewOption": "Add a new option",
    "addPayment": "Add payment",
    "addStep": "Add step",
    "addTier": "Add a tier",
    "addToKeplr": "Add token to Keplr",
    "addToken": "Add token",
    "addUpdateWidget": "Add/update widget",
    "approve": "Approve",
    "begin": "Begin",
    "burn": "Burn",
    "cancel": "Cancel",
    "castYourVote": "Cast your vote",
    "change": "Change",
    "changeYourVote": "Change your vote",
    "chooseImage": "Choose image",
    "claim": "Claim",
    "claimNumTokens": "Claim your {{amount}} ${{tokenSymbol}}",
    "claimStakingRewards": "Claim staking rewards",
    "clear": "Clear",
    "clearAll": "Clear all",
    "clearNotification": "Clear notification",
    "clickHereToProposeAdding": "Click here to propose adding it.",
    "clickToCopyAddress": "Click to copy address",
    "clickToFollow": "Click to follow",
    "clickToUnfollow": "Click to unfollow",
    "clickToView": "Click to view",
    "close": "Close",
    "connect": "Connect",
    "continue": "Continue",
    "continueEditing": "Continue editing",
    "copy": "Copy",
    "copyAddress": "Copy address",
    "copyAddressToClipboard": "Copy address to clipboard",
    "copyDaoChainAddress": "Copy {{chain}} address",
    "copyToClipboard": "Copy to clipboard",
    "create": "Create",
    "createAProposal": "Create a proposal",
    "createAToken": "Create a token",
    "createAccount": "Create account",
    "createCrossChainAccount": "Create cross-chain account",
    "createDAO": "Create DAO",
    "createNftCollection": "Create NFT collection",
    "createSubDao": "Create SubDAO",
    "delete": "Delete",
    "deleteDraft": "Delete draft",
    "deposit": "Deposit",
    "depositFiat": "Deposit fiat",
    "deselectAllNfts": "Deselect all {{count}} NFTs",
    "done": "Done",
    "downloadMembersCsv": "Download member data (.csv)",
    "downloadVotesCsv": "Download voting data (.csv)",
    "duplicate": "Duplicate",
    "execute": "Execute",
    "follow": "Follow",
    "following": "Following",
    "fund": "Fund",
    "fundAndExecute": "Fund and execute",
    "fundAndRelay": "Fund and relay",
    "go": "Go",
    "goBack": "Go back",
    "goToDaoPage": "Go to DAO page",
    "goToProposal": "Go to proposal",
    "gotIt": "Got it",
    "hide": "Hide",
    "hideLogInButton": "Hide log in button",
    "hidePreview": "Hide preview",
    "hideQrCode": "Hide QR code",
    "hideRawData": "Hide raw data",
    "ignore": "Ignore",
    "import": "Import",
    "inboxWithNumNotifications_one": "{{count}} notification in inbox",
    "inboxWithNumNotifications_other": "{{count}} notification in inbox",
    "inboxWithNumNotifications_zero": "Inbox",
    "installKeplr": "Install Keplr",
    "instantiate": "Instantiate",
    "loadDraft": "Load draft",
    "loadMessageTemplate": "Load message template",
    "loadMore": "Load more",
    "loadSaves": "Load saves",
    "logIn": "Log in",
    "logOut": "Log out",
    "manage": "Manage",
    "manageStake": "Manage your ${{tokenSymbol}} stake",
    "manageStaking": "Manage staking",
    "metadataUploaded": "Metadata uploaded",
    "migrate": "Migrate",
    "more": "More",
    "newCompensationCycle": "New Compensation Cycle",
    "newPost": "New post",
    "newProposal": "New proposal",
    "newSubDao": "New SubDAO",
    "newVestingPayment": "New vesting payment",
    "nominate": "Nominate",
    "none": "None",
    "openInChainExplorer": "Open in chain explorer",
    "openInDestination": "Open in {{destination}}",
    "openSidebarToVote": "Open sidebar to vote",
    "prepareUpdate": "Prepare update",
    "preview": "Preview",
    "propose": "Propose",
    "proposeUpgrade": "Propose upgrade",
    "publish": "Publish",
    "publishAnywayWithCountdown": "Publish anyway? ({{secondsRemaining}})",
    "publishProposal": "Publish proposal",
    "rateContributions": "Rate contributions",
    "readLess": "Read less",
    "readMore": "Read more",
    "refundAndCancel": "Refund and cancel",
    "registerSlashes": "Register slashes",
    "reject": "Reject",
    "relay": "Relay",
    "remove": "Remove",
    "removeWidget": "Remove widget",
    "resetQuestion": "Reset?",
    "retry": "Retry",
    "returnHome": "Return home",
    "review": "Review",
    "reviewResultsAndPropose": "Review results and propose",
    "save": "Save",
    "saveDraft": "Save draft",
    "searchDaos": "Search DAOs",
    "selectAllNfts": "Select all {{count}} NFTs",
    "selectNft": "Select NFT",
    "selectToken": "Select token",
    "selectValidator": "Select validator",
    "selectWidget": "Select widget",
    "setAsProfilePhoto": "Set as profile photo",
    "setDisplayName": "set display name",
    "setUpDiscordNotifier": "Set up Discord Notifier",
    "showInstantiateMessage": "Show Instantiate Message",
    "showQrCode": "Show QR code",
    "showRawData": "Show raw data",
    "spend": "Spend",
    "stake": "Stake",
    "stakeAllButProposalDeposit": "Stake all but the {{proposalDeposit}} ${{tokenSymbol}} proposal deposit",
    "stakeOrUnstake": "Stake or unstake",
    "stakeTokenSymbol": "Stake ${{tokenSymbol}}",
    "stakingMode": {
      "claim": "Claim",
      "restake": "Restake",
      "stake": "Stake",
      "unstake": "Unstake"
    },
    "stopConnecting": "Stop connecting",
    "stopFollowing": "Stop following",
    "submit": "Submit",
    "toggleFullScreen": "Toggle full screen",
    "toggleTheme": "Toggle theme",
    "topUp": "Top up",
    "transfer": "Transfer",
    "unfollow": "Unfollow",
    "unhide": "Unhide",
    "unsetProfilePhoto": "Unset profile photo",
    "unsubscribeAll": "Unsubscribe all",
    "update": "Update",
    "upload": "Upload",
    "uploadImage": "Upload image",
    "uploadMetadata": "Upload metadata",
    "useExistingToken": "Use an existing token",
    "verify": "Verify",
    "viewDaosPage": "View DAO's page",
    "viewOnDaoDao": "View on DAO DAO",
    "viewProposals": "View proposals",
    "withDecodedModuleMessages": "with Decoded Module Messages",
    "withdrawAvailableBalance": "Withdraw available balance",
    "withdrawFiat": "Withdraw fiat"
  },
  "daoCreator": {
    "MembershipBased": {
      "description": "Small organization with a few members who are likely to stick around. Members can be added and removed by a vote of existing members.",
      "membership": "By invitation",
      "name": "Membership DAO (Multisig)",
      "supplies": "None"
    },
    "NftBased": {
      "description": "Fluid organization with many members who can join and leave as they wish. Members can alter their governance power and participation by exchanging non-fungible tokens.",
      "membership": "By staking NFTs",
      "name": "Non-Fungible Token (NFT)-based DAO",
      "supplies": "Non-Fungible Tokens"
    },
    "TokenBased": {
      "description": "Fluid organization with many members who can join and leave as they wish. Members can alter their governance power and participation by exchanging tokens.",
      "membership": "By staking tokens",
      "name": "Token-based DAO",
      "supplies": "Tokens"
    }
  },
  "depositRefundPolicy": {
    "always": "Always",
    "never": "Never",
    "only_passed": "Only passed proposals"
  },
  "emoji": {
    "artistPalette": "Artist palette",
    "baby": "Baby",
    "babyAngel": "Baby Angel",
    "ballotBox": "Ballot box",
    "bank": "Bank",
    "bee": "Bee",
    "box": "Box",
    "brokenHeart": "Broken heart",
    "cameraWithFlash": "Camera with flash",
    "chains": "Chains",
    "chart": "Chart",
    "clock": "Clock",
    "closedLockWithKey": "Closed lock with key",
    "curvedDownArrow": "Curved down arrow",
    "cycle": "Cycle",
    "deposit": "Deposit",
    "downArrow": "Down arrow",
    "family": "Family",
    "fileFolder": "File folder",
    "filmSlate": "Film slate",
    "fire": "Fire",
    "gas": "Gas",
    "gear": "Gear",
    "hammerAndWrench": "Hammer and wrench",
    "handshake": "Handshake",
    "herb": "Herb",
    "image": "Image",
    "info": "Info",
    "joystick": "Joystick",
    "key": "Key",
    "lockWithPen": "Lock with pen",
    "megaphone": "Megaphone",
    "memo": "Memo",
    "money": "Money",
    "moneyBag": "Money bag",
    "moneyWings": "Money wings",
    "mushroom": "Mushroom",
    "numbers": "Numbers",
    "pencil": "Pencil",
    "people": "People",
    "pick": "Mining pick",
    "printer": "Printer",
    "raisedHand": "Raised hand",
    "recycle": "Recycle",
    "robot": "Robot",
    "suitAndTie": "Suit and tie",
    "swords": "Swords",
    "telescope": "Telescope",
    "token": "Token",
    "trash": "Trash",
    "unicorn": "Unicorn",
    "unlock": "Unlock",
    "whale": "Whale",
    "wrench": "Wrench",
    "x": "X",
    "yinYang": "Yin Yang"
  },
  "error": {
    "accountListAlreadySaved": "Account list already saved.",
    "accountListNeedsSaving": "Save the account list once you're done.",
    "addressNotAMember": "This address it not a member of the DAO.",
    "addressNotFoundOnChain": "Address not found on chain.",
    "alreadySentTokenSwap_dao": "The DAO has already sent its share of this token swap.",
    "alreadySentTokenSwap_gov": "The chain has already sent its share of this token swap.",
    "alreadySentTokenSwap_wallet": "You have already sent your share of this token swap.",
    "browserNotSupported": "Not supported in this browser.",
    "cannotCreateCompensationCycleAlreadyActive": "You cannot create a new compensation cycle while one is already active.",
    "cannotStakeMoreThanYouHave": "You can't stake or unstake more tokens than you have.",
    "cannotTxZeroTokens": "You can't stake, unstake, or claim zero tokens.",
    "cannotUseCreateNftCollectionOnStargaze": "You cannot create a new NFT Collection via this action on Stargaze. Use the Stargaze Studio app on the DAO's Apps page instead.",
    "cantSpendMoreThanTreasury": "Can't spend more tokens than are in the treasury ({{amount}} ${{tokenSymbol}}).",
    "chainNotConnected": "Chain not connected.",
    "checkInternetOrTryAgain": "Check your internet connection, refresh the page, or try again later.",
    "closeDateMustBeAfterOpenDate": "Close date must be after open date.",
    "compensationCycleNeedsProfileName": "You have not set a display name. Set a recognizable name for your profile in the sidebar on the right before submitting a contribution so the DAO members know who you are.",
    "correctErrorsAbove": "Please correct the errors above.",
    "couldntFindDAO": "We couldn't find a DAO with that address.",
    "couldntFindProposal": "We couldn't find a proposal with that ID.",
    "counterpartyBalanceInsufficient": "The counterparty's balance of {{amount}} ${{tokenSymbol}} is insufficient. They may be unable to complete this swap.",
    "daoAccountNotFound": "The DAO account could not be found for this chain.",
    "daoAndSubDaosAlreadyOnV2": "This DAO (and all of its SubDAOs, if it has any) have already been upgraded.",
    "daoCreationIncomplete": "DAO creation is incomplete. Ensure all required fields have been filled out.",
    "daoFeatureUnsupported": "{{name}} does not support {{feature}} yet.",
    "daoIsInactive_absolute_one": "This DAO is inactive. Proposals cannot be created until {{count}} token is staked.",
    "daoIsInactive_absolute_other": "This DAO is inactive. Proposals cannot be created until {{count}} tokens are staked.",
    "daoIsInactive_percent": "This DAO is inactive. Proposals cannot be created until {{percent}} of voting power is staked.",
    "daoIsPaused": "You cannot create a proposal when the DAO is paused.",
    "discordAuthFailed": "Discord authentication unexpectedly failed. Try again or reach out to us for assistance.",
    "emptyFile": "File is empty.",
    "enterAtLeastTwoAccounts": "Enter at least two accounts.",
    "errorOccurredOnPage": "An error occurred on this page.",
    "failedParsingCoreVersion": "Failed to determine core version.",
    "failedToFindGovernanceProposal": "Failed to find governance proposal with ID {{id}}.",
    "failedToGetFactoryTokenInfo": "Failed to get factory token info. Please enter a valid factory denom.",
    "failedToGetTokenInfo": "Failed to get token info. Please enter a valid {{tokenType}} contract address.",
    "failedToLoadMembersDescription": "Members failed to load. Check your internet connection or try again later.",
    "failedToLoadMembersTitle": "Failed to load members.",
    "failedToLoadWidget": "Failed to load widget.",
    "failedToRelayAcks": "Failed to relay acknowledgements from {{chain}}.",
    "failedToRelayAndGetAcks": "Failed to relay packets and get acknowledgements.",
    "failedToRelayPackets": "Failed to relay packets to {{chain}}.",
    "feeTokenNotFound": "Fee token not found.",
    "govTokenBalancesDoNotSumTo100": "Total token distribution percentage must equal 100%, but it currently sums to {{totalPercent}}.",
    "insufficientForDeposit": "You do not have enough funds to cover a deposit of {{amount}} ${{tokenSymbol}}.",
    "insufficientFunds": "Insufficient funds.",
    "insufficientWalletBalance": "Insufficient wallet balance (total: {{amount}} ${{tokenSymbol}}).",
    "invalidAccount": "At least one of the specified accounts is invalid.",
    "invalidActionKeys": "Invalid action keys found: {{keys}}",
    "invalidChain": "Invalid chain.",
    "invalidCosmosMessage": "Invalid <2>Cosmos message</2>",
    "invalidDate": "Invalid date format. Please use YYYY-MM-DD.",
    "invalidDateTime": "Invalid date/time format. Please use YYYY-MM-DD HH:MM.",
    "invalidDuplicateFound": "Invalid. Duplicate found in other list.",
    "invalidExecuteMessage": "Invalid execute message",
    "invalidImportFormat": "Invalid format. Expected `actions` array, with each action containing `key` and `data`.",
    "invalidJsonFile": "Invalid JSON file.",
    "invalidMessage": "Invalid message",
    "invalidVerificationCode": "Invalid verification code.",
    "loadingData": "Failed to load data.",
    "logInToContinue": "Log in to continue.",
    "logInToCreate": "Log in to create a DAO.",
    "logInToFollow": "Log in to follow a DAO.",
    "metadataNeedsUploading": "Once the proposal details are finalized, click to upload the metadata to IPFS before submitting.",
    "metadataUpload": "Failed to upload metadata.",
    "missingGovernanceTokenAddress": "Missing governance token address.",
    "missingGovernanceTokenDenom": "Missing governance token denom.",
    "missingNativeToken": "Missing native token.",
    "mustBeMemberToCreateCompensationCycle": "You must be a member of the DAO to create a compensation cycle.",
    "mustBeMemberToCreatePost": "You must be a member of the DAO to create a post.",
    "mustBeMemberToCreateProposal": "You must be a member of the DAO to create a proposal.",
    "mustBeMemberToCreateVestingPayment": "You must be a member of the DAO to create a vesting payment.",
    "nameIncorrectLength": "A DAO's name must be between {{min}} and {{max}} characters.",
    "needsVote": "You must select a vote.",
    "nftCollectionNotChosen": "You must create an NFT collection or enter the address of an existing collection before using this action.",
    "nftMetadataNotUploaded": "You must upload the NFT metadata before you can mint.",
    "noCancellableVestingContracts": "There are no vesting contracts that can be cancelled.",
    "noClaimsAvailable": "No claims available.",
    "noCw20Tokens": "There are no CW20 tokens displayed in the treasury.",
    "noFromValidatorSelected": "No from validator selected.",
    "noImageSelected": "No image selected.",
    "noItemsSetUnusableAction": "There are no items set, so this action cannot be used.",
    "noMembers": "This DAO has no members.",
    "noNftCollections": "There are no NFT collections displayed in the treasury.",
    "noNftSelected": "No NFT selected.",
    "noNftsSelected": "No NFTs selected.",
    "noSingleChoiceProposalModule": "The DAO does not have a single choice proposal module.",
    "noSingleChoiceProposalModuleAppsDisabled": "The DAO does not have a recognizable single choice proposal module, so Apps cannot be used at this time.",
    "noValidatorFound": "No validator found.",
    "noValidatorSelected": "No validator selected.",
    "noVestingContractSelected": "No vesting contract selected.",
    "noVestingContractsNeedingSlashRegistration": "There are no vesting contracts that need a slash to be registered.",
    "noVotingPower": "You have not given anyone voting power. Add some members to your DAO.",
    "notATokenSwapContractAddress": "This contract is not a token swap contract.",
    "notAnNftCollectionAddress": "This contract is not an NFT collection.",
    "notCw20Address": "This contract address is not a CW20 token.",
    "notCw721Address": "This contract address is not a NFT (CW721).",
    "notEnoughForDeposit": "You do not have enough tokens to pay the proposal deposit.",
    "notInActiveSet": "This validator is not in the active set. No rewards will be earned while this is the case.",
    "notPartyInTokenSwap_dao": "The DAO is not a party in this token swap.",
    "notPartyInTokenSwap_gov": "The chain is not a party in this token swap.",
    "notPartyInTokenSwap_wallet": "You are not a party in this token swap.",
    "notYetSentTokenSwap_dao": "The DAO has not yet sent its share of this token swap, so it cannot withdraw.",
    "notYetSentTokenSwap_gov": "The chain has not yet sent its share of this token swap, so it cannot withdraw.",
    "notYetSentTokenSwap_wallet": "You have not yet sent your share of this token swap, so you cannot withdraw.",
    "nothingStaked": "Nothing staked.",
    "notificationsNotAllowed": "Notifications not allowed.",
    "pageNotFound": "We couldn't find that page.",
    "parentMustUpgradeToV2": "SubDAOs cannot upgrade themselves. The parent DAO must upgrade this SubDAO.",
    "polytoneConnectionNotFound": "Polytone connection not found.",
    "polytoneExecutedNoRelay": "The proposal was executed, but not all of the cross-chain messages have been relayed. You must relay them to complete the execution.",
    "proposalIdNotFound": "An unexpected error occurred while redirecting to the proposal. Go back to the DAO's home page and reload to find it.",
    "proposalNotFound": "Proposal not found.",
    "relayerAlreadySetUp": "Relayer already set up.",
    "relayerNotSetUp": "Relayer not set up.",
    "selectAChainToContinue": "Select a chain to continue.",
    "simulationFailedInvalidProposalActions": "Simulation failed. Verify your proposal actions are valid.",
    "stakeInsufficient": "The DAO has {{amount}} ${{tokenSymbol}} staked, which is insufficient.",
    "stargazeDaoNoCrossChainAccountsForPress": "This Stargaze DAO has no cross-chain accounts, and Press does not work on Stargaze. Create a cross-chain account for the DAO before setting up Press.",
    "stepPercentsMustSumTo100": "Step percentages must sum to 100%.",
    "subDaoAlreadyExists": "SubDAO already exists.",
    "tokenSwapContractNotChosen": "You must create a token swap or enter the address of an existing token swap before using this action.",
    "tooFewChoices": "The proposal must have at least two choices.",
    "tooManyChoices": "The proposal cannot have more than {{count}} choices.",
    "treasuryInsufficient": "The treasury only has {{amount}} ${{tokenSymbol}}, which is insufficient.",
    "treasuryNoTokensCannotStake": "The treasury has no ${{tokenSymbol}}, so you can't stake any tokens.",
    "txNotFound": "Transaction not found.",
    "unexpectedError": "An unexpected error occurred.",
    "unknownDenom": "Unknown denomination {{denom}}.",
    "unknownInboxType": "Unknown inbox item type."
  },
  "form": {
    "addAnImage": "Add an image",
    "address": "Address",
    "addressInputPlaceholder_any": "Search profile or DAO name or enter an address...",
    "addressInputPlaceholder_contract": "Search DAO name or enter an address...",
    "addressInputPlaceholder_wallet": "Search profile name or enter an address...",
    "admin": "Admin",
    "afterDelay": "after delay",
    "allowRevotingDescription": "This will allow members to change their vote on proposals before the voting duration deadline. As a result, proposals will not be able to finish early.",
    "allowRevotingTitle": "Allow revoting",
    "allowedMethods": "Allowed methods",
    "allowedMethodsDescription": "Comma separated list of smart contract method names to authorize (i.e. set_item, remove_item)",
    "allowsTradingAfter": "Allows trading after",
    "amount": "amount",
    "anotherAccount": "Another account",
    "attributeName": "Attribute name",
    "attributeNamePlaceholder": "Community impact",
    "audioUrl": "Audio URL",
    "authzCustomMessageTypeTooltip": "Use a custom protobuf message type. WARNING: do not use this feature unless you know what you're doing.",
    "authzLimitsDescription": "Limitations to put on the Authorzation grant.",
    "authzMessageType": "The type of Cosmos Message to grant / revoke an authorization for.",
    "authzType": "Authorization type",
    "authzTypeDescription": "The type of authorization to grant or revoke.",
    "authzUseCustomMessageType": "Use custom message type",
    "automaticallyAddNFTsTitle": "Automatically add NFTs",
    "automaticallyAddNFTsTooltip": "Should NFTs sent to the DAO get added to the treasury?",
    "automaticallyAddTokensTitle": "Automatically add tokens",
    "automaticallyAddTokensTooltip": "Should tokens sent to the DAO get added to the treasury?",
    "buttonLabel": "Button label",
    "calls": "Calls",
    "callsDescription": "The maximum amount of times the designated account is authorized to call a smart contract.",
    "closeDate": "Close date",
    "codeId": "Code ID",
    "collectionAddress": "Collection address",
    "collectionName": "Collection name",
    "collectionSymbol": "Collection symbol",
    "combined": "Combined",
    "compensationCycleName": "Compensation cycle name",
    "compensationCycleNamePlaceholder": "October Contributor Drop",
    "contractLabel": "Contract label",
    "contractPermissions": "Contract permissions",
    "contractPermissionsDescription": "The contract permissions this authorization grants the grantee.",
    "contribution": "Contribution",
    "contributionAttributes": "Contribution attributes",
    "contributionAttributesDescription": "These are the values for which raters will be asked to provide ratings on contributions, and the associated tokens comprise the compensation paid out for that attribute. For example, \"Community impact\", \"Financial value\", \"Code quality\", etc.",
    "contributionInstructionsPlaceholder": "This is what contributors will see when they submit their contributions. Explain how they should submit.",
    "contributionSubmitted": "You submitted a contribution for this cycle. Submitting again will overwrite your previous response.",
    "contributorAddress": "Contributor's address",
    "createNewCollection": "Create new collection",
    "createNewTokenSwap": "Create new token swap",
    "createValidatorMessage": "Create validator message",
    "createValidatorMessageTooltip": "Create a validator controlled by your DAO. Note: you will need to run a validator node (on a server for example). Be sure to use that node's public key (<binary> tendermint show-validator).",
    "currentValue": "Current value",
    "cw20Token": "CW20 Token",
    "cw20Tokens": "CW20 tokens",
    "daoDescriptionPlaceholder": "Give your DAO a description...",
    "daoName": "Name",
    "daoNamePlaceholder": "Give your DAO a name",
    "dates": "Dates",
    "defaultTierName": "Core contributors",
    "delegatorAddress": "Delegator address",
    "deposit": "Deposit",
    "description": "Description",
    "descriptionOptional": "Description (optional)",
    "dragFileHereOrClick": "Drag file here or <2>click</2> to select.",
    "dragImageHereOrClick": "Drag image here or <2>click</2> to select.",
    "dropFileHere": "Drop file here to select it.",
    "dropImageHere": "Drop image here to select it.",
    "editValidatorMessage": "Edit validator message",
    "editValidatorMessageTooltip": "Update the information of a validator controlled by your DAO.",
    "encodedMessages": "List of encoded messages",
    "encodedMessagesTooltip": "Provide a list of protobuf encoded messages with the values in base64.",
    "enterImageUrl": "Enter image URL",
    "executeSmartContract": "Execute smart contract?",
    "executeSmartContractTooltip": "When sending an NFT to a smart contract, you may want to trigger an execution with an optional message on the contract. If you don't know what this means, you probably don't want to use it.",
    "existingCollectionAddress": "Existing collection address",
    "existingTokenSwapContract": "Existing token swap contract",
    "existingTokens": "Existing Tokens",
    "explicitContent": "Explicit content",
    "externalLink": "External link",
    "feeShareContractAddressDescription": "The address to claim fee share for. NOTE: you must be admin or the creator of this smart contract to claim fees for it.",
    "feeShareToggleWithdrawerAddress": "Custom withdrawer address",
    "feeShareToggleWithdrawerAddressTooltip_dao": "Customize the address allowed to withdraw fees. Defaults to the DAO.",
    "feeShareToggleWithdrawerAddressTooltip_gov": "Customize the address allowed to withdraw fees. Defaults to the chain's governance module.",
    "feeShareToggleWithdrawerAddressTooltip_wallet": "Customize the address allowed to withdraw fees. Defaults to your wallet.",
    "feeShareWithdrawerAddress": "Withdrawer address",
    "feeShareWithdrawerAddressTooltip": "The address that can withdraw fees.",
    "finishDate": "Finish date",
    "fromValidator": "From Validator",
    "fundExistingTokenSwap": "Fund existing token swap",
    "funds": "Funds",
    "generic": "Generic",
    "governanceTokenNamePlaceholder": "Longer name of your token (e.g. \"Dog Dao token\")",
    "governanceTokenSymbolPlaceholder": "An alphanumeric symbol (e.g. \"DOG\")",
    "grantAuthorizationOption": "Grant authorization",
    "grantOrRevokeAuthz": "Grant or revoke authorization",
    "granteeAddress": "Grantee address",
    "granteeAddressTooltip": "The address you are granting or revoking to execute a message on behalf of the DAO.",
    "howManyTokensCanTheyMint": "How many ${{tokenSymbol}} can they mint?",
    "iContributedPlaceholder": "I contributed...",
    "image": "Image",
    "imageUrlTooltip": "A link to an image. For example: https://moonphase.is/image.svg",
    "initialDeposit": "Initial deposit",
    "initialSupply": "Total token supply",
    "instantiatedAddress": "Instantiated address",
    "instructions": "Instructions",
    "item": "Item",
    "itemNoValueSet": "This item does not currently have a value set.",
    "itemValueEmpty": "This item is currently set to an empty value.",
    "limits": "Limits",
    "maxCharacters": "Max of {{max}} characters",
    "membersAddress": "Member's address",
    "membersToAddOrUpdate": "Members to add/update",
    "membersToAddOrUpdateDescription": "Set the voting power of each address individually. DAO DAO will calculate the voting weight percentage for you.",
    "membersToRemove": "Members to remove",
    "membersToRemoveDescription": "These addresses will be removed from the DAO.",
    "message": "Message",
    "messageType": "Message type",
    "migrateDescription": "This will <1>migrate</1> the selected contract to a new code ID.",
    "migrateMessage": "Migrate message",
    "minter": "Minter",
    "minterContract": "Minter contract",
    "minterContractMessage": "Minter contract message",
    "moreThanOneAccount": "More than one account",
    "multipleChoiceDescription": "This allows proposals to contain multiple choices instead of just `Yes` and `No`.\n\n**CAUTION:** Using more features increases the risk to a DAO because there are more things that can go wrong. You can always enable this later.",
    "multipleChoiceOptionDescriptionPlaceholder": "Give your choice a description... (supports Markdown format)",
    "multipleChoiceOptionTitlePlaceholder": "Give your choice a title",
    "multipleChoiceTitle": "Multiple choice proposals",
    "name": "Name",
    "nativeOrFactoryToken": "Native or factory token",
    "nftCollectionAddress": "NFT collection address",
    "nftMintInstructions": "Create a unique token ID for the NFT and enter the address of the initial owner below.",
    "nftUploadMetadataInstructions": "Input the NFT's metadata, and then press 'Upload' to store it on IPFS.",
    "noOne": "No one",
    "oneOneCollection": "1/1 Collection",
    "onlyMembersExecuteTitle": "Only members execute",
    "onlyMembersExecuteTooltip": "If enabled, only members may execute passed proposals.",
    "openDate": "Open date",
    "optional": "optional",
    "options": "Options",
    "orUploadOne": "...or upload one below.",
    "outputToken": "Output token",
    "parameterChanges": "Parameter changes",
    "passingThresholdDescription": "Passing threshold works differently depending on whether your DAO has a quorum.\n- If your DAO has *no quorum*, this is the percentage of the DAO's voting power that must vote 'yes' for a proposal to pass.\n- If your DAO *has a quorum*, the passing threshold is only calculated from those who voted.",
    "passingThresholdTitle": "Passing threshold",
    "passingThresholdWithQuorumDescription": "The proportion of those who voted on a single choice proposal who must vote 'Yes' for it to pass.",
    "payment": "Payment",
    "percentOfTotalSupply": "Percent of total token supply",
    "percentOfTotalSupplyTooltip": "{{weight}} of the total token supply will be split evenly among all of the members in this tier. Want to add members with different voting power? Add another tier.",
    "plan": "Plan",
    "postToDelete": "Post to delete",
    "postToUpdate": "Post to update",
    "proposalDepositDescription": "The number of tokens that must be deposited to create a proposal. Setting this may deter spam, but setting it too high may limit broad participation.",
    "proposalDepositTitle": "Proposal deposit",
    "proposalSubmissionPolicyDescription": "Who is allowed to submit proposals to the DAO?",
    "proposalSubmissionPolicyTitle": "Proposal submission policy",
    "proposalType": "Proposal type",
    "proposalsDescriptionPlaceholder": "Give your proposal a description...",
    "proposalsName": "Proposal's name",
    "proposalsNamePlaceholder": "Give your proposal a name",
    "proposedSpends": "Proposed spends",
    "quorumDescription": "The minimum percentage of voting power that must vote on a proposal for it to be considered. For example, in the US House of Representatives, 218 members must be present for a vote. If you have a DAO with many inactive members, setting this value too high may make it difficult to pass proposals.",
    "quorumTitle": "Quorum",
    "ratingInstructionsPlaceholder": "This is what DAO members will see when they are rating the contributions. Explain how they should rate.",
    "ratingsSubmitted": "You submitted ratings for this cycle. Submitting again will overwrite your previous response.",
    "recipient": "Recipient",
    "redelegateDestinationValidator": "Destination validator",
    "redelegateDestinationValidatorTooltip": "The validator you are redelegating to.",
    "redelegateSourceValidator": "Source validator",
    "redelegateSourceValidatorTooltip": "The validator you are redelegating away from.",
    "refundFailedProposalsTitle": "Refund failed proposals",
    "refundFailedProposalsTooltip": "Should failed proposals have their deposit refunded?",
    "refundPolicyTitle": "Once a proposal completes, when should deposits be refunded?",
    "requireProposalDepositTitle": "Require proposal deposit",
    "requireProposalDepositTooltip": "If enabled, requires that tokens are deposited to create a proposal.",
    "revokeAuthorizationOption": "Revoke authorization",
    "royalties": "Royalties",
    "salt": "Salt",
    "sameAsPublicSubmissionCloseDate": "Same as public submission close date",
    "selectAnImage": "Select an image",
    "showAdvancedNftFields": "Show advanced fields",
    "showAdvancedNftFieldsTooltip": "The form above only allows setting name and description in the metadata attached to the image. Turn this on to view more advanced fields.",
    "showAdvancedSettings": "Show advanced settings",
    "smartContractAddress": "Smart contract address",
    "smartContractMessage": "Smart contract message",
    "smartContractMessageDescription": "The smart contract message to execute.",
    "spendingAllowance": "Spending allowance",
    "spendingAllowanceDescription": "The amount of funds allowed to be spent by the authorized account.",
    "standardCollection": "Standard Collection",
    "startDate": "Start date",
    "steps": "Steps",
    "subDaosToRecognize": "SubDAOs to recognize",
    "subDaosToRemove": "SubDAOs to remove",
    "suggestedItems": "Suggested items",
    "suggestedValues": "Suggested values",
    "symbol": "Symbol",
    "tierNameTitle": "Tier name",
    "tierNameTooltip": "The \"class\" of member. For example: \"Core developers\" or \"friends and family.\" These names are only for your reference.",
    "title": "Title",
    "toValidator": "To Validator",
    "tokenAddress": "Token address",
    "tokenContractAddressTitle": "Token contract address",
    "tokenDefinition": "Token definition",
    "tokenIdentifier": "Token identifier",
    "tokenInfo": "Token info",
    "tokenInstructions": "Token instructions",
    "tokenSwapCreateInstructions": "In this step, you will create the token swap. This creation step describes how many funds each party needs to send for the swap to complete. <2>No funds will be transferred at this time.</2>",
    "tokenSwapExistingInstructions": "In this step, you will choose a token swap that you (or the counterparty) has already initiated. After you fund a swap, you can withdraw the tokens you funded unless (or until) the counterparty has paid. Likewise, the counterparty can withdraw the tokens they funded until you pay.",
    "uniqueTokenId": "Unique token ID",
    "unjailValidatorMessage": "Unjail validator message",
    "unjailValidatorMessageTooltip": "When a validator is 'jailed' for downtime, you must submit an Unjail transaction from the operator account in order to be able to get block proposer rewards again.",
    "unlockPercent": "Unlock percent",
    "unstakingDurationDescription": "In order to vote, members must stake their tokens with the DAO. Members who would like to leave the DAO or trade their governance tokens must first unstake them. This setting configures how long members have to wait after unstaking their tokens for those tokens to become available. The longer you set this duration, the more sure you can be sure that people who register their tokens are keen to participate in your DAO's governance.",
    "unstakingDurationTitle": "Unstaking period",
    "updateAdminDescription": "This will update the admin for the selected contract. The new admin will have complete control over the contract. Take care.",
    "updateProposalSubmissionConfigDescription": "This will update the proposal submission configuration for this DAO. A bad configuration can lock the DAO. Take care. If you have questions, please feel free to ask in the <2>DAO DAO Discord</2>.",
    "updateProposalSubmissionConfigTitle": "Update Proposal Submission Config",
    "updateProposalSubmissionConfigTitle_multipleChoice": "Update Multiple Choice Proposal Submission Config",
    "updateProposalSubmissionConfigTitle_singleChoice": "Update Single Choice Proposal Submission Config",
    "updateVotingConfigDescription": "This will update the voting configuration for this DAO. A bad configuration can lock the DAO or create unexpected voting outcomes. Take care. If you have questions, please feel free to ask in the <2>DAO DAO Discord</2>.",
    "updateVotingConfigTitle": "Update Voting Config",
    "updateVotingConfigTitle_multipleChoice": "Update Multiple Choice Voting Config",
    "updateVotingConfigTitle_singleChoice": "Update Single Choice Voting Config",
    "url": "URL",
    "useCw20": "Use CW20",
    "useCw20ExecuteTooltip": "Fund the smart contract execution with a CW20 token instead of a native token.",
    "useExistingCollection": "Use existing collection",
    "validator": "Validator",
    "value": "Value",
    "videoUrl": "Video URL",
    "votingDurationDescription": "The amount of time proposals are open for voting. A low proposal duration may increase the speed at which your DAO can pass proposals. Setting the duration too low may make it difficult for proposals to pass as voters will have limited time to vote. After this time elapses, the proposal will either pass or fail.",
    "votingDurationTitle": "Voting duration",
    "votingWeightPerMember": "Voting weight per member",
    "votingWeightPerMemberTooltip": "Each member of this tier will receive {{weight}} voting power. Want to add members with different voting power? Add another tier.",
    "votingWeightPlaceholder": "Voting weight",
    "whatDoWeDistributeQuestion": "What do we distribute?",
    "whatReceiveCounterpartyQuestion": "What do you need to <2>receive</2> from the counterparty for the token swap to complete?",
    "whatSendCounterpartyQuestion": "What do you need to <2>send</2> to the counterparty for the token swap to complete?",
    "whoAreYouQuestion": "Who are you?",
    "whoCanCancelPayment": "Who can cancel this payment?",
    "whoCanMint": "Who can mint an NFT?",
    "whoIsCounterparty": "Who is the counterparty?",
    "whoTransferNftQuestion": "Where would you like to transfer the NFT?",
    "widget": "Widget",
    "withdrawAddress": "Withdraw address"
  },
  "format": {
    "estUsdValue": "${{amount}} est. USD value",
    "inTime": "in {{value}} {{unit}}",
    "time": "{{value}} {{unit}}",
    "timeAgo": "{{value}} {{unit}} ago",
    "timeLeft": "{{value}} {{unit}} left",
    "token": "{{amount}} ${{symbol}}"
  },
  "govProposalStatus": {
    "depositPeriod": "Deposit Period",
    "failed": "Failed",
    "passed": "Passed",
    "pendingSubmission": "Pending Submission",
    "rejected": "Rejected",
    "unrecognized": "Unrecognized",
    "unspecified": "Unspecified",
    "votingPeriod": "Voting Period"
  },
  "govProposalStatusTitleShort": {
    "deposit": "Deposit",
    "failed": "Failed",
    "passed": "Passed",
    "rejected": "Rejected",
    "unrecognized": "Unrecognized",
    "unspecified": "Unspecified",
    "voting": "Voting"
  },
  "govProposalType": {
    "CancelSoftwareUpgradeProposal": "Cancel Software Upgrade",
    "CommunityPoolSpendProposal": "Community Pool Spend",
    "ParameterChangeProposal": "Parameter Change",
    "SoftwareUpgradeProposal": "Software Upgrade",
    "TextProposal": "Text"
  },
  "inboxItemType": {
    "joined_dao": {
      "description": "When you're added to a DAO.",
      "title": "Joined DAO"
    },
    "proposal_closed": {
      "description": "When a proposal is rejected and closed.",
      "title": "Proposal closed"
    },
    "proposal_created": {
      "description": "When a proposal is created.",
      "title": "Proposal created"
    },
    "proposal_executed": {
      "description": "When a proposal is passed and executed.",
      "title": "Proposal executed"
    }
  },
  "info": {
    "abstainVote": "Abstain",
    "actionPageWarning": "There are {{actions}} actions across {{pages}} pages. Make sure you view all pages before voting.",
    "actionPaysTokenSwap_paid": "This action sent {{amount}} ${{tokenSymbol}} to the token swap contract below.",
    "actionPaysTokenSwap_unpaid": "This action sends {{amount}} ${{tokenSymbol}} to the token swap contract below.",
    "actionWithdrawsTokenSwap_done": "This action withdrew {{amount}} ${{tokenSymbol}} from the token swap contract below.",
    "actionWithdrawsTokenSwap_pending": "This action withdraws {{amount}} ${{tokenSymbol}} from the token swap contract below.",
    "actions_one": "{{count}} action",
    "actions_other": "{{count}} actions",
    "activePushNotificationSubscriptions_one": "You have {{count}} subscription active.",
    "activePushNotificationSubscriptions_other": "You have {{count}} subscriptions active.",
    "activeThresholdDescription": "The amount of voting power that needs to be staked in order for the DAO to become active (i.e. proposal creation is allowed).",
    "addCw20ToTreasuryActionDescription": "Display the DAO's balance of a CW20 token in the treasury view.",
    "addCw721ToTreasuryActionDescription": "Display the NFTs owned by the DAO from a CW721 NFT collection in the treasury view.",
    "addedToDaoFollowPrompt_withTimestamp": "You were added as a member to this DAO on {{timestamp}}. Follow it to receive updates.",
    "addedToDaoFollowPrompt_withoutTimestamp": "You were added as a member to this DAO. Follow it to receive updates.",
    "advancedVotingConfigWarning": "These are advanced features. If you configure them without fully understanding how they work, you can lock your DAO, making it impossible for proposals to pass.",
    "allAccountsCreated": "All accounts have been created.",
    "andNumMore": "and {{count}} more",
    "anyone": "Anyone",
    "appsProposalDescription": "Add a title and description, and then review the actions generated by the app. Once it all looks good, publish it to the DAO for voting.",
    "areTheyMissingQuestion": "Are they missing?",
    "authzAuthorizationDescription": "Grant / revoke authorizations that allow other accounts to perform actions on behalf of the DAO.",
    "authzExecDescription": "Perform an action on behalf of another account.",
    "authzWarning": "USE WITH CAUTION! Granting an Authorization allows another account to perform actions on behalf of your account.",
    "available": "available",
    "availableBalance": "Available balance",
    "availableHistoryLoaded": "All available history has been loaded.",
    "bulkImportActionExplanation": "Choose a JSON file below that matches the format described in <2>this guide</2>.",
    "bulkImportActionsDescription": "Import many actions at once.",
    "burnNftDescription": "Burn an NFT.",
    "bypassSimulationExplanation": "Simulating the proposal failed. If you don't know what this means, one of the actions above is probably misconfigured. If you are sure you want to publish it anyway, click the button again.",
    "cannotRemoveNoneOption": "You cannot remove this option. It will be added to the end of the list.",
    "chooseProfilePictureSubtitle": "Use an NFT you own on any of DAO DAO's supported chains to represent your identity, or upload a new one.",
    "chooseTokenToPayWith": "Choose token to pay with",
    "claimToReceiveUnstaked": "Claim them to receive your unstaked tokens.",
    "claimedRewards": "Claimed rewards",
    "closedAtDate": "Closed at {{date}}",
    "closesAtDate": "Closes at {{date}}",
    "communityPoolDepositDescription": "Deposit funds into the community pool.",
    "communityPoolTransferDescription": "Transfer funds from the community pool.",
    "communityPoolTransferExplanation": "Funds spent in a governance proposal are transferred from the community pool to the governance module before being distributed.",
    "compensationCycleClosedAwaitingCompletion": "Contributions and ratings have been submitted. Review the results and create a proposal to complete the cycle.",
    "completeRelayOrLoseFunds": "Make sure you have completed the relaying process, or you may lose the tokens you sent to the relayers to pay fees.",
    "completed": "Completed",
    "configureWalletModalExplanation": "You have a wallet extension installed, but it doesn't seem like you've set up a wallet. Create a wallet to continue.",
    "connectedTo": "Connected to {{name}}",
    "copiedAddressToClipboard": "Copy address to clipboard",
    "copiedDaoChainAddress": "Copied {{chain}} address",
    "copiedLinkToClipboard": "Copied link to clipboard.",
    "copiedToClipboard": "Copied to clipboard.",
    "copyWalletAddressTooltip": "Copy wallet address",
    "count": "Count",
    "createADaoDescription": "Create a new project, organization, or community organized the way you want.",
    "createCrossChainAccountDescription": "Create an account for this DAO on another chain.",
    "createCrossChainAccountExplanation": "This action creates an account on another chain, allowing this DAO to perform actions on that chain.",
    "createDaoFeesExplanation": "Some chains charge fees to create new tokens. These fees are sent directly to the chain—not DAO DAO.",
    "createFirstOneQuestion": "Create the first one?",
    "createNftCollectionDescription_dao": "Create a new NFT collection controlled by the DAO.",
    "createNftCollectionDescription_gov": "Create a new NFT collection controlled by the chain.",
    "createNftCollectionDescription_wallet": "Create a new NFT collection controlled by you.",
    "createPostDescription": "Create a post on the DAO's press.",
    "createPressContract": "To set up Press, you must first create a smart contract to manage it.",
    "createStep1": "Pick a DAO type and name it",
    "createStep2": "Governance configuration",
    "createStep3": "Voting configuration",
    "createStep4": "Review and approve",
    "createVestingContractManager": "To create vesting payments, you must first create a vesting contract manager.",
    "createdPressContract": "The press contract has been created.",
    "createdVestingContractManager": "The vesting contract manager has been created.",
    "creatingDao": "Creating DAO...",
    "crossChainExecuteDescription": "This action executes a cross-chain transaction.",
    "customActionDescription_dao": "Perform any custom action a wallet can.",
    "customActionDescription_gov": "Perform any custom action.",
    "customActionDescription_wallet": "Perform any custom action.",
    "daoAdminExecDescription": "Execute actions on behalf of a DAO with you as the admin. A parent DAO could use this to execute actions on behalf of a SubDAO.",
    "daoCreationProcessExplanation": "Creating your DAO has never been this easy:",
    "daoInfoWillRefresh": "DAO information may take up to {{seconds}} seconds to update on all pages once proposal is executed.",
    "daodaoLogo": "DAO DAO Logo",
    "daodaoWithVersion": "DAO DAO v{{version}}",
    "daosGovernedTooltip": "These DAOs use ${{tokenSymbol}} as their governance token.",
    "daosLogo": "DAO's Logo",
    "deletePostDescription": "Delete a post from the DAO's press.",
    "depositFiatDescription": "Buy $USDC with a card or bank account, and it will be sent directly to the DAO's treasury. Balances may take some time to update once the Kado transaction completes.",
    "depositFromStargazeQuestion": "Deposit NFTs from Stargaze?",
    "depositNftsModalSubtitle": "Select the NFTs you want to deposit into {{daoName}} from your Stargaze wallet.",
    "depositToGovernanceProposalDescription": "Deposit to a chain governance proposal in the deposit period.",
    "depositTokenSubtitle": "Tokens will be sent from your wallet.",
    "depositTokenWarning": "Tokens will be sent from your wallet to the DAO. You cannot undo a deposit. You will not gain voting power by depositing tokens.",
    "disabled": "Disabled",
    "discordNotifierExplanation": "The Discord Notifier broadcasts a message to registered Discord channels when a proposal is created. Clicking the button below begins the registration process; it will take you to Discord's website and prompt you to choose a server and channel. You will then be redirected back here and prompted to authorize with your wallet. Once this is done, proposal notifications are enabled.",
    "discordNotifierRegistrations_one": "You have setup {{count}} notifier.",
    "discordNotifierRegistrations_other": "You have setup {{count}} notifiers.",
    "dontKnowNotSure": "Don't know/Not sure",
    "draftSavedAtTime": "Draft saved at {{time}}.",
    "draftSaving": "Draft saving...",
    "draftStillSaved": "The draft will still be saved.",
    "easilyShareLink": "Easily share a link by copying it below.",
    "emailVerificationResent": "Email verification resent.",
    "emailVerified": "Email verified.",
    "emptyInboxCaughtUp": "You're all caught up!",
    "enableMultipleChoiceProposalsDescription": "Allow members to vote on many options in one proposal.",
    "enableMultipleChoiceProposalsExplanation": "This action will enable the creation of multiple choice proposals, which allow voting on many options in one proposal. Each option can have a list of actions that execute if that option wins. It will be configured to match the current config of the single choice proposal module.",
    "enabled": "Enabled",
    "enterNameBeforeSavingDraft": "Enter a name before saving a draft",
    "establishedAbbr": "Est.",
    "estimatedTreasuryUsdValueTooltip": "The USD value of treasuries is estimated by summing the value of all tokens held in the treasury that are listed on Osmosis.",
    "estimatedUsdValueTooltip": "USD value is estimated using price data from Osmosis.",
    "executeSmartContractActionDescription": "Execute a message on a smart contract.",
    "failing": "Failing",
    "feeShareDescription": "Earn gas fees from a smart contract you deployed.",
    "feedDescription": "Open proposals in the DAOs you follow will show up here.",
    "fetchedAtTime": "Fetched at {{time}}",
    "fiatOnOffRampDescription": "Using a card or bank account, you can buy $USDC that will be sent straight to your wallet. You can also sell $USDC from your wallet and receive USD in your bank account.",
    "findCategory": "Find a category...",
    "finishedAt": "Finished at",
    "finishesAt": "Finishes at",
    "followTooltip": "Receive notifications in your inbox about this DAO.",
    "funded": "Funded",
    "getTokensOn": "Get tokens on {{name}}.",
    "goToParent": "Go to parent DAO",
    "govDepositDescription": "{{amount}} ${{symbol}} is needed to enter the voting period. {{minAmount}} ${{symbol}} is the minimum needed to submit a proposal.",
    "govNftCollection": "Governance NFT Collection",
    "govTokenAddress": "Governance Token",
    "groupAddress": "CW4 Group",
    "historySinceDate": "History since {{date}}",
    "inboxConfigPreferencesDescription": "Choose where you want to receive notifications. Website notifications appear here on the Inbox page.",
    "inboxDescription": "Your notification inbox.",
    "inboxEmailTooltip": "Receive inbox notifications in your email.",
    "installKeplrMobileOrScanQrCode": "If you don't have Keplr Mobile installed, <2>click here to install it</2> or scan the QR code at the bottom with another device.",
    "instantiatePredictableSmartContractActionDescription": "Instantiate a smart contract with a predictable address.",
    "instantiateSmartContractActionDescription": "Instantiate a smart contract.",
    "intakeClosesAt": "Intake closes at {{date}}.",
    "intakeOpensAt": "Intake opens at {{date}}.",
    "intakeOpensAtAndClosesAt": "Intake opens at {{openDate}} and closes at {{closeDate}}.",
    "jsonIsValid": "json is valid",
    "keplrMobileReset": "If nothing shows up in Keplr Mobile, <2>click here to reset</2> and try connecting again. Refresh the page if the problem persists.",
    "keplrModalWalletExplanation": "Your wallet is your digital identity on the blockchain. Having one lets you interact with web3 applications like DAO DAO.\nWe recommend the Keplr wallet.",
    "lastUpdatedOnDate": "Last updated on {{date}}",
    "loading": "Loading...",
    "loadingMembership": "Loading membership...",
    "loadingProposalStatus": "The proposal is loading...",
    "logo": "Logo",
    "majority": "Majority (>50%)",
    "manageMembersActionDescription": "Add, update, or remove members from the DAO.",
    "managePayrollDescription": "Manage the payroll system used by the DAO. The chosen system appears as a new tab on the DAO's home page.",
    "manageStakingDescription": "Manage native token staking: claim rewards, delegate, redelegate, and undelegate.",
    "manageStorageItemsDescription": "Manage storage items associated with your DAO. Set or remove key / value pairs.",
    "manageSubDaosActionDescription": "Recognize or remove SubDAOs from the DAO.",
    "manageTreasuryNftsDescription": "Manage NFT Collections displayed on your DAO's treasury page.",
    "manageTreasuryTokensDescription": "Manage Tokens displayed on your DAO's treasury page.",
    "manageVestingDescription": "Create a vesting contract that will release tokens to a recipient over time, or cancel an existing one.",
    "manageWidgetsDescription": "Add, update, and remove widgets.",
    "maxSlippageDescription": "As the transaction is executing, the swap price will fluctuate. If the price slips beyond this maximum slippage, the swap will not occur.",
    "meBalancesNftsDescription_all": "These are the NFTs you own on all DAO DAO-supported chains.",
    "meBalancesNftsDescription_chain": "These are the NFTs you own on {{chainName}}.",
    "meDescription": "View your tokens and NFTs, and execute transactions from your wallet.",
    "members": "members",
    "membershipDaoNotMemberInfo_dao": "You are not a member of {{daoName}}. To become a member, existing members must vote to add you.",
    "membershipDaoNotMemberInfo_proposal": "You were not a member of {{daoName}} when this proposal was created, so you cannot vote on it.",
    "migrateFollowingDescription": "Followed DAOs require a migration to a new storage mechanism.",
    "migrateSmartContractActionDescription": "Migrate a CosmWasm contract to a new code ID.",
    "minimumOutputRequiredDescription_dao": "Before the proposal is passed and executed, the swap price will fluctuate. If the price drops and no longer satisfies this minimum output required, the swap will not occur.",
    "minimumOutputRequiredDescription_gov": "Before the proposal is passed and executed, the swap price will fluctuate. If the price drops and no longer satisfies this minimum output required, the swap will not occur.",
    "minimumOutputRequiredDescription_wallet": "The exact swap price will fluctuate during the transaction, but the minimum output amount is guaranteed. If the price drops and no longer satisfies this minimum output required, the swap will not occur.",
    "mintActionDescription": "Mint new governance tokens.",
    "mintExplanation": "This action mints new tokens, increasing the token supply. With great power comes great responsibility; be careful! If you have an active threshold set, this may lock the DAO.",
    "mintNftDescription": "Create a new NFT.",
    "mustViewAllActionPagesBeforeVoting": "You must view all action pages before voting.",
    "name": "Name",
    "newMemberExplanation": "To add a new member, the DAO must pass a proposal.",
    "nftCollectionExplanation_all": "In this DAO, voting share is determined by staking NFTs from a collection. This is the collection members stake to gain voting power in this DAO.",
    "nftCollectionExplanation_staked": "These NFTs have been staked by members of the DAO to earn voting power.",
    "nftCollectionExplanation_unstaked": "These NFTs would provide voting power if they were staked, but no one is currently staking them.",
    "nftImage": "NFT image",
    "no": "No",
    "noActiveCompensationCycle": "There is no active compensation cycle.",
    "noCompletedCyclesYet": "No completed cycles yet.",
    "noDaosFollowedYet": "You have not yet followed any DAOs.",
    "noDisplayName": "no display name",
    "noFeaturedDaosYet": "There are no featured DAOs yet.",
    "noFundsDuringInstantiation": "No funds will be transferred during instantiation.",
    "noGovernanceProposalsNeedDeposit": "There are no governance proposals that need deposits.",
    "noGovernanceProposalsOpenForVoting": "There are no governance proposals open for voting.",
    "noNftsFound": "No NFTs found.",
    "noNftsYet": "No NFTs to appreciate yet.",
    "noPayrollDescription": "Disable all payroll features and hide them from the DAO's home page.",
    "noPostsFound": "No posts found.",
    "noPriceData": "No price data.",
    "noProposalsTooltip": "This DAO has no proposals and may be inactive or a duplicate.",
    "noProposalsYet": "No proposals to vote on yet.",
    "noPushNotificationSubscriptions": "You do not have any push notification subscriptions.",
    "noSubDaosYet": "No SubDAOs yet.",
    "noSubmission": "No submission",
    "noTokenSelected": "No token selected",
    "noVestingPaymentsFound": "No vesting payments found.",
    "noVote": "No",
    "noWithVeto": "No with Veto",
    "nominateContributorDescription": "If you know of a contributor who deserves to be compensated but who did not submit a contribution this cycle, you can nominate them below. Doing so will allow them to be rated by the DAO members along with the rest of the contributors.",
    "none": "None",
    "notAdmin": "Your DAO is not the admin of this contract. The proposal will not be executable while this is the case.",
    "notMet": "Not met",
    "nothingFound": "Nothing found.",
    "nothingHereYet": "Nothing here yet.",
    "notificationsInInbox_one": "There is {{count}} notification in your inbox.",
    "notificationsInInbox_other": "There are {{count}} notification in your inbox.",
    "numContributors_one": "{{count}} contributor",
    "numContributors_other": "{{count}} contributors",
    "numNftsSelected_one": "{{count}} NFT selected",
    "numNftsSelected_other": "{{count}} NFTs selected",
    "numNftsSelected_zero": "No NFT selected",
    "numPayments_one": "{{count}} payment",
    "numPayments_other": "{{count}} payments",
    "numProposals_one": "{{count}} proposal",
    "numProposals_other": "{{count}} proposals",
    "numSelected_one": "{{count}} selected",
    "numSelected_other": "{{count}} selected",
    "onlyMembers": "Only members",
    "openMobileWalletAndAcceptConnection": "<0>Open your mobile wallet</0> and accept the connection request.",
    "openProfileSidebarTooltip": "Click to open profile sidebar.",
    "opensAtDate": "Opens at {{date}}",
    "optionInert": "This option will not perform any actions if it wins.",
    "orSelectWallet": "or select a wallet...",
    "otherNotifiersNotShown": "Notifiers setup by others are not shown.",
    "overwritingSave": "This save will overwrite the existing one with the same name.",
    "paid": "Paid",
    "passing": "Passing",
    "pastGovPropQuorumHiddenExplanation_passed": "Quorum is hidden because the total voting power has changed since this proposal closed. The proposal passed, so the quorum must have been reached.",
    "pastGovPropQuorumHiddenExplanation_rejected": "Quorum is hidden because the total voting power has changed since this proposal closed.",
    "pending": "Pending",
    "pendingRewards": "Pending rewards",
    "percentVotingPower": "{{percent}} voting power",
    "percentagesRepresentVotingPower": "Percentages represent voting power.",
    "postedOnDate": "Posted on {{date}}",
    "preReleaseExplanation": "This is a pre-release version of DAO DAO running on the {{chain}} chain.",
    "pressDescriptionTooltip": "This description will be included with the post's NFT metadata and may show up in wallets or other places. Think of it as a brief description of the post.",
    "productVersion": "DAO DAO v{{versionNumber}}",
    "proposalAllAbstainClarification": "When all voters abstain, a proposal will fail.",
    "proposalDepositWillBeRefunded": "Proposal deposit will be refunded once closed.",
    "proposalQuorumTooltip": "This proportion of voting power must vote on a proposal for it to pass.",
    "proposalStatus": {
      "completedAndOpen": "This proposal's outcome is determined. Votes may still be cast until expiration.",
      "depositPeriod": "This proposal is in the deposit period and will open for voting once the deposit is reached.",
      "govNotOpen": "This proposal is no longer open for voting. {{turnoutYesPercent}} of votes cast were 'Yes'.",
      "notOpen": "This proposal is no longer open for voting. {{turnoutPercent}} of all votes were cast, and {{turnoutYesPercent}} of them were 'Yes'.{{extra}}",
      "notOpenMultipleChoice": "This proposal is no longer open for voting. {{turnoutPercent}} of all possible votes were cast.{{extra}}",
      "willFail": "If the current vote stands, this proposal will fail.",
      "willFailBadQuorum": "If the current vote stands, this proposal will fail due to a lack of voter participation.",
      "willFailBadThreshold": "If the current vote stands, this proposal will fail because insufficient 'Yes' votes have been cast.",
      "willFailTiedVote": "If the current vote stands, this proposal will fail because the votes are tied.",
      "willPass": "If the current vote stands, this proposal will pass.",
      "willVeto": "If the current vote stands, this proposal will be vetoed."
    },
    "proposalThresholdTooltip": "A proposal must attain this proportion of 'Yes' votes to pass.",
    "proposeDeleteTooltip": "Propose deleting this post",
    "proposeUpdateTooltip": "Propose updates to this post",
    "pushNotificationsTooltip": "Receive inbox notifications on your mobile phone or browser.",
    "ratingClosesAt": "Rating closes at {{date}}.",
    "reached": "Reached",
    "recognizeSubDaoDescription": "Recognizing {{name}} as a SubDAO will display it inside the SubDAOs tab.",
    "redelegate": "Redelegate",
    "refund": "Refund",
    "register": "Register",
    "registerSlashVestingExplanation": "<0>When a slash occurs against a validator with whom a vesting contract is currently staking or unstaking tokens, the slash needs to be registered with the vesting contract. For more information, see the Slashing section of the vesting contract's</0><1>security documentation</1><2>.</2>",
    "relayingCrossChainMessages": "Cross-chain messages are waiting to be relayed. Check back in a few minutes to ensure relaying is complete.",
    "remainingBalanceVesting": "Remaining balance vesting",
    "removeCw20FromTreasuryActionDescription": "Stop displaying the DAO's balance of a CW20 token in the treasury view.",
    "removeCw721FromTreasuryActionDescription": "Stop displaying the NFTs owned by the DAO from a CW721 NFT collection in the treasury view.",
    "retroactiveCompensationDescription": "After each contribution cycle, contributors are assigned points based on their contributions. Payment is split based on the points they receive.",
    "reviewActionImportData": "Review the following actions to make sure they look right. If they do, click the Import button at the bottom to add them to the proposal.",
    "reviewYourProposal": "Review your proposal...",
    "reviewYourTransaction": "Review your transaction...",
    "saveTransactionDescription": "Save this transaction so you can reuse it later. Using an existing name will overwrite the previous save.",
    "searchDraftPlaceholder": "Find a draft...",
    "searchForChain": "Search for a chain...",
    "searchForToken": "Search for a token...",
    "searchForWidget": "Search for a widget...",
    "searchMessages": "Search messages",
    "searchNftsPlaceholder": "Find an NFT...",
    "searchValidatorsPlaceholder": "Find a validator...",
    "selectPressChain": "Each post will be minted as an NFT on this chain and then deposited into the DAO's treasury.",
    "selfRelayDescription": "One or more messages in this proposal require self-relaying across chains since automatic relayers do not exist or are inactive right now.",
    "setUpDiscordNotificationsTooltip": "Set up Discord notifications",
    "signedInAs": "Signed in as {{name}}",
    "socialLoginWarning": "Social logins may be less secure than a self-managed wallet. We recommend the self-managed wallets, above, if you plan on storing large amounts of money.",
    "socialLoginWarning_onlySocial": "Social logins may be less secure than a self-managed wallet. We recommend a self-managed wallet if you plan on storing large amounts of money.",
    "socialLoginsPoweredByWeb3Auth": "Social logins powered by web3auth",
    "spendActionDescription_dao": "Spend native or CW20 tokens from the treasury.",
    "spendActionDescription_gov": "Spend tokens from the community pool.",
    "spendActionDescription_wallet": "Spend native tokens from your wallet.",
    "stake": "Stake",
    "stakeActionDescription": "Manage native token staking.",
    "stakeYourTokensToJoin": "Stake your ${{tokenSymbol}} tokens to become a member of {{daoName}}.",
    "staked": "staked",
    "stakedNftsExplanation": "These have been staked by DAO members to earn voting power.",
    "stakes": "Stakes",
    "stakingAddress": "Staking Contract",
    "stargazeCreateCollectionFirst": "On Stargaze, you must first create the NFT Collection via a DAO proposal, and then you can mint NFTs.",
    "startedAt": "Started at",
    "startsAt": "Starts at",
    "startsIn": "Starts in",
    "subDaoExplanation": "SubDAOs are children DAOs that help manage groups within your DAO.",
    "subDaoNeedsAdding": "{{parent}} has not yet recognized {{child}} as a SubDAO.",
    "subDaoRegistered": "{{child}} is a SubDAO of {{parent}}.",
    "subjectsCurrentlyCastVote": "{{subject}} currently cast vote",
    "subjectsCurrentlyCastVoteTooltip": "This is the vote that {{subject}} already cast. Casting another vote will replace this one.",
    "subjectsVote": "{{subject}} vote",
    "submissionsBeingRated": "Members of the DAO are rating submissions. After the rating period closes, the DAO will publish a proposal to distribute compensation according to their responses.",
    "submitGovernanceProposalDescription": "Submit a proposal to chain governance.",
    "submitUpgradeProposal": "Submit a proposal to upgrade the DAO?",
    "submitted": "Submitted",
    "supportsMarkdownFormat": "Supports Markdown format",
    "swapTokensOnWyndDescription": "Swap tokens on WYND DEX.",
    "testnet": "Testnet",
    "tierMemberGovTokenAllocationTooltip": "This member will receive {{tokens}} ${{tokenSymbol}} when the DAO is created.",
    "to": "to",
    "today": "today",
    "token": "token",
    "tokenBurned": "NFT with ID {{tokenId}} has been burned.",
    "tokenDaoNotMemberInfoProposal": "You were not a member of {{daoName}} when this proposal was created, so you cannot vote on it. You will be able to vote on future proposals as long as you have ${{tokenSymbol}} staked at the time those proposals are created.",
    "tokenOnChain": "${{token}} on {{chain}}",
    "tokenSwapDescription": "Create a new token swap that completes when both parties have paid their tokens or fund an existing one.",
    "tokenSwapExplanation": "To perform a token swap, one DAO must first create it, configuring the number of tokens each party must contribute. Then, both DAOs must add their funds. Once both DAOs have added their funds to the swap, the swap will be performed immediately.",
    "token_one": "token",
    "token_other": "tokens",
    "tokens": "tokens",
    "tokensWillBeSentToTreasury": "These tokens will be sent to the DAO's treasury.",
    "tokensWillBeSplitAmongContributors": "{{tokens}} will be split among contributors.",
    "tos": "DAO DAO TOOLING IS PROVIDED \"AS IS\", AT YOUR OWN RISK, AND WITHOUT WARRANTIES OF ANY KIND. No developer or entity involved in creating the DAO DAO UI or smart contracts will be liable for any claims or damages whatsoever associated with your use, inability to use, or your interaction with other users of DAO DAO tooling, including any direct, indirect, incidental, special, exemplary, punitive or consequential damages, or loss of profits, cryptocurrencies, tokens, or anything else of value.",
    "totalHoldings": "Total holdings",
    "transactionBuilderDescription": "Build transactions with the various actions to execute from your wallet.",
    "transferNftDescription_dao": "Transfer an NFT out of the DAO's treasury.",
    "transferNftDescription_gov": "Transfer an NFT from the Community Pool.",
    "transferNftDescription_wallet": "Transfer an NFT from your wallet.",
    "treasuryBalanceDescription": "{{numberOfTokensMinted, number}} tokens will be minted. {{memberPercent}} will be sent to members according to the distribution below. The remaining {{treasuryPercent}} will go to the DAO's treasury, where they can be distributed later via governance proposals.",
    "treasuryPercent": "Treasury percent",
    "tryingAgain": "Trying again...",
    "txAbbr": "TX",
    "txSavesDescription": "Build and save transactions above that you may want to execute in the future. Choose one below to load it into the builder.",
    "unfollowTooltip": "Stop receiving updates about this DAO.",
    "unknown": "Unknown",
    "unpaid": "Unpaid",
    "unstake": "Unstake",
    "unstakingDurationExplanation": "It takes {{duration}} to unstake tokens.",
    "unstakingDurationNoneExplanation": "Your tokens will unstake immediately.",
    "unstakingMechanics": "It will take {{humanReadableTime}} from the time you unstake your tokens before they are able to be redeemed by you. During that time, you will not receive staking rewards. You will not be able to cancel the unbonding.",
    "unstakingStatus": {
      "claimed": "Claimed",
      "readyToClaim": "Ready to claim",
      "unstaking": "Unstaking"
    },
    "updateContractAdminActionDescription": "Update the CosmWasm level admin of a smart contract.",
    "updateInfoActionDescription": "Update your DAO's name, image, and description.",
    "updateMinterAllowanceDescription": "Allow an account to mint tokens, or remove the allowance.",
    "updateMinterAllowanceExplanation": "This action is needed to allow an account to mint tokens.",
    "updatePostDescription": "Update a post on the DAO's press.",
    "updateProposalSubmissionConfigActionDescription": "Update the proposal submission paramaters for your DAO.",
    "updateVestingWidget": "There is an update available for the vesting widget. Click the button below to prepare the update, and then publish the proposal.",
    "updateVotingConfigActionDescription": "Update the voting parameters for your DAO.",
    "updatedVestingWidget": "The vesting widget will be updated once this proposal is passed and executed.",
    "upgradeToV2Description": "Upgrade your DAO to the v2 smart contracts. This supports SubDAOs and other new features.",
    "upgradeToV2Explanation": "This upgrades your DAO's contracts to the latest audited version. Below you may register any SubDAOs that were created while this DAO was using v1. SubDAOs can use any version, but v2 is recommended.",
    "validatorActionsDescription": "Make transactions related to running a validator.",
    "verificationPendingResend": "Verification pending. Click to resend email.",
    "verifyAddressMatches": "Verify that the following address matches the 'Send To' address in the widget below.",
    "verifyingGovernanceToken": "Verifying governance token...",
    "vestingIsCancellableByOther": "This vesting payment can be cancelled by the following address after it's created.",
    "vestingIsCancellableByOwner_dao": "This vesting payment can be cancelled by the DAO after it's created.",
    "vestingIsCancellableByOwner_wallet": "You will be able to cancel this vesting payment after it's created.",
    "vestingNotCancellable": "This vesting payment cannot be cancelled later.",
    "vestingPaymentsDescription": "A vesting contract distributes funds to contributors over time at a constant rate. The DAO can vote to cancel vesting at any time.",
    "vestingPaymentsNeedSlashRegistration": "Vesting payments need slash registration",
    "vestingPaymentsRefreshSeconds": "Vesting payments refresh every {{seconds}} seconds.",
    "vetoThresholdTooltip": "A proposal must attain this proportion of 'No with Veto' votes to be vetoed.",
    "vetoed": "Vetoed",
    "vetoing": "Vetoing",
    "voteOnGovernanceProposalDescription": "Vote on an open chain governance proposal, as an individual or as a validator.",
    "voteTallyRefreshesSeconds": "Vote tally refreshes every {{seconds}} seconds.",
    "voteUntilExpirationExplanation": "Although the proposal outcome is determined, you may cast a vote until the proposal expires to be included in the final tally.",
    "votingModuleAdapterCreationDiscord": "Want to help us support this voting module? Join the <2><0>DAO DAO Discord</0><1/></2> and post in #dao-help.",
    "votingModuleNotYetSupported": "This DAO uses a voting module that our UI does not yet support. Functionality may be limited.",
    "votingPowerAtCreationTooltip": "This was your voting power at the time of proposal creation.",
    "waitingForRateAndPropose": "Waiting for DAO members to rate and propose...",
    "whatAreYouLookingForPrompt": "What are you looking for?",
    "whatDoTheyWantToBeRated": "What do they want to be rated?",
    "whatDoYouWantToBeRated": "What do you want to be rated?",
    "widgetActive": "This widget is active.",
    "winningOptionTooltip": "This is the winning option.",
    "withdrawStakingRewards": "Withdraw staking rewards",
    "withdrawTokenSwapDescription": "Withdraw funds from a token swap that has not yet completed.",
    "wouldYouLikeToSearchQuestion": "Would you like to search for a DAO?",
    "wyndSwapSummary_minOut": "This swaps {{in}} for at least {{minOut}}. If the price is too low, the swap will fail.",
    "wyndSwapSummary_unsafe": "BE CAREFUL! This swaps {{in}} for ${{outSymbol}} at whatever the price is at the time of the swap. We recommend using a minimum output to require a fair price.",
    "yes": "Yes",
    "yesVote": "Yes",
    "yesWillWinTieClarification": "'Yes' will win a tie vote.",
    "you": "you",
    "youAreMember": "You are a member",
    "your": "Your",
    "yourBalance": "Your balance"
  },
  "meta": {
    "description": "DAOs for everyone.",
    "title": "DAO DAO"
  },
  "proposalModuleLabel": {
    "DaoProposalMultiple": "Multiple Choice",
    "DaoProposalSingle": "Single Choice"
  },
  "proposalStatusTitle": {
    "closed": "Closed",
    "executed": "Executed",
    "execution_failed": "Execution failed",
    "open": "Open",
    "passed": "Passed",
    "rejected": "Rejected"
  },
  "proposalStatusTitleShort": {
    "closed": "Closed",
    "executed": "Executed",
    "execution_failed": "Exec. fail",
    "open": "Open",
    "passed": "Passed",
    "rejected": "Rejected"
  },
  "proposalVoteTitle": {
    "abstain": "Abstain",
    "no": "No",
    "none": "None",
    "pending": "Pending",
    "yes": "Yes"
  },
  "success": {
    "addedToken": "Added token to Keplr.",
    "claimedRewards": "Claimed rewards.",
    "compensationCycleCompleted": "Compensation cycle completed. Redirecting to proposal...",
    "compensationCycleCreated": "Compensation cycle created.",
    "contributionSubmitted": "Contribution submitted.",
    "created": "Created successfully.",
    "crossChainMessagesRelayed": "All cross-chain messages have been relayed.",
    "daoCreatedPleaseWait": "DAO created. You will be redirected once the DAO page is ready...",
    "deposited": "Deposited {{amount}} ${{tokenSymbol}}.",
    "depositedTokenIntoDao": "Deposited {{amount}} ${{tokenSymbol}} into the {{daoName}} treasury.",
    "discordNotifierEnabled": "Discord notifier setup successfully. Your notifier list will be updated shortly.",
    "discordNotifierRemoved": "Discord notifier removed. Your notifier list will be updated shortly.",
    "nftCollectionContractInstantiated": "NFT collection created successfully.",
    "nominationSubmitted": "Contributor nominated for this compensation cycle.",
    "proposalClosed": "Closed successfully.",
    "proposalCreatedCompleteCompensationCycle": "Proposal published. Complete the compensation cycle by saving the proposal ID.",
    "proposalExecuted": "Executed. Refreshing page...",
    "ratingsSubmitted": "Ratings submitted.",
    "restaked": "Restaked successfully.",
    "saved": "Saved successfully.",
    "staked": "Staked successfully.",
    "tokenSwapContractInstantiated": "Token swap created successfully.",
    "transactionExecuted": "Transaction executed successfully.",
    "unstaked": "Unstaked successfully.",
    "voteCast": "Vote successfully cast.",
    "withdrewPayment": "Withdrew payment."
  },
  "title": {
    "404": "404: Not Found",
    "500": "500: Error",
    "acceptingSubmissions": "Accepting submissions",
    "account": "Account",
    "actions": "Actions",
    "actions_one": "Action",
    "actions_other": "Actions",
    "active": "Active",
    "activeThreshold": "Active Threshold",
    "addCw20ToTreasury": "Display Token Balance in Treasury",
    "addCw721ToTreasury": "Display NFT Collection in Treasury",
    "advancedConfiguration": "Advanced configuration",
    "all": "All",
    "allNfts": "All NFTs",
    "apps": "Apps",
    "authzAuthorization": "Authz Grant / Revoke",
    "authzExec": "Authz Exec",
    "available": "Available",
    "averages": "Averages",
    "balance": "Balance",
    "balances": "Balances",
    "beforeYouEnter": "Before you enter",
    "beginVesting": "Begin vesting",
    "bulkImportActions": "Bulk Import Actions",
    "burnNft": "Burn NFT",
    "cancelVesting": "Cancel vesting",
    "canceled": "Canceled",
    "casting": "Casting",
    "chain": "Chain",
    "chainModule": {
      "gov": "Governance Module"
    },
    "choices": "Choices",
    "chooseAStructure": "Choose a structure",
    "chooseAnAction": "Choose an action...",
    "chooseProfilePicture": "Choose Profile Picture",
    "chooseTokenAmount": "Choose token amount",
    "claimRewards": "Claim Rewards",
    "claimTokens": "Claim Tokens",
    "claimableTokens": "Claimable ${{tokenSymbol}}",
    "claimed": "Claimed",
    "claimedBalance": "Claimed balance",
    "collection": "Collection",
    "collectionInfo": "Collection info",
    "commission": "Commission",
    "communityPool": "Community Pool",
    "communityPoolDeposit": "Community Pool Deposit",
    "compensation": "Compensation",
    "completed": "Completed",
    "completedCompensationCycles": "Completed compensation cycles",
    "configuration": "Configuration",
    "configureWalletToContinue": "Configure your wallet to continue",
    "congratsOnDao": "Congrats on your DAO!",
    "congratsOnProposal": "Congrats, {{name}} is out!",
    "congratsOnSubDao": "Congrats on your SubDAO!",
    "connectingToWallet": "Connecting to {{wallet}}...",
    "content": "Content",
    "contributions": "Contributions",
    "contributor": "Contributor",
    "createADAO": "Create a DAO",
    "createAProposal": "Create a proposal",
    "createASubDao": "Create a SubDAO",
    "createCrossChainAccount": "Create Cross-Chain Account",
    "createNftCollection": "Create NFT Collection",
    "createPost": "Create Post",
    "createProposal": "Create proposal",
    "createValidator": "Create a validator",
    "created": "Created",
    "createdAccount": "Created account",
    "creator": "Creator",
    "crossChainExecute": "Cross-Chain Execute",
    "currentWinner": "Current Winner",
    "custom": "Custom",
    "customValidatorAddress": "Custom Validator Address",
    "dao": "DAO",
    "daoAdminExec": "DAO Admin Execute",
    "daoCreationProcess": "DAO Creation Process",
    "daoNotFound": "DAO Not Found",
    "daoRatings": "DAO Ratings",
    "daoTreasury": "DAO Treasury",
    "daos": "DAOs",
    "daosAddresses": "DAO's addresses",
    "daosGoverned": "DAOs governed",
    "date": "Date",
    "delegated": "Delegated",
    "deletePost": "Delete Post",
    "deposit": "Deposit",
    "depositFiat": "Deposit fiat",
    "depositNfts": "Import NFTs",
    "depositRefunds": "Deposit refunds",
    "depositToGovernanceProposal": "Deposit to Governance Proposal",
    "depositToken": "Deposit ${{tokenSymbol}}",
    "deposited": "Deposited",
    "deposits": "Deposits",
    "description": "Description",
    "discord": "Discord",
    "discordNotifier": "Discord Notifier",
    "distribution": "Distribution",
    "documentation": "Documentation",
    "editValidator": "Edit validator",
    "email": "Email",
    "enableMultipleChoiceProposals": "Enable Multiple Choice Proposals",
    "enableRetroactiveCompensation": "Enable Retroactive Compensation",
    "enableVestingPayments": "Enable Vesting Payments",
    "end": "End",
    "estUsdValue": "Est. USD value",
    "executeSmartContract": "Execute Smart Contract",
    "existingToken": "Existing token",
    "expires": "Expires",
    "extension": "Extension",
    "factoryToken": "Factory token",
    "featuredDaos": "Featured DAOs",
    "feeShare": "Fee share",
    "feed": "Feed",
    "fees": "Fees",
    "fiatOnOffRamp": "Fiat on/off ramp",
    "filter": "Filter",
    "finished": "Finished",
    "floorPrice": "Floor price",
    "following": "Following",
    "fundAndExecute": "Fund and execute",
    "github": "GitHub",
    "governance": "Governance",
    "governanceConfiguration": "Governance configuration",
    "governanceDaos": "Governance DAOs",
    "governanceToken": "Governance Token",
    "header": "Header",
    "hidden": "Hidden",
    "history": "History",
    "holdings": "Holdings",
    "home": "Home",
    "identity": "Identity",
    "inbox": "Inbox",
    "inboxConfiguration": "Inbox configuration",
    "inboxWithCount": "Inbox ({{count}})",
    "initialTokenDistribution": "Initial Token Distribution",
    "instantiatePredictableSmartContract": "Instantiate Predictable Smart Contract",
    "instantiateSmartContract": "Instantiate Smart Contract",
    "lastUpdated": "Last updated",
    "ledger": "Ledger",
    "logInWith": "Log in with...",
    "loggedIn": "Logged in",
    "loggedOut": "Logged out",
    "loggingInToService": "Logging in to {{service}}...",
    "manage": "Manage",
    "manageMembers": "Manage Members",
    "managePayroll": "Manage Payroll",
    "manageStaking": "Manage Staking",
    "manageStorageItems": "Manage Storage Items",
    "manageSubDaos": "Manage SubDAOs",
    "manageTreasuryNfts": "Manage Treasury NFTs",
    "manageTreasuryTokens": "Manage Treasury Tokens",
    "manageVesting": "Manage Vesting",
    "manageWidgets": "Manage Widgets",
    "maxSlippage": "Maximum slippage",
    "me": "Me",
    "memberOfDao": "Member of {{daoName}}",
    "members": "Members",
    "membership": "Membership",
    "migrateFollowing": "Migrate Followed DAOs",
    "migrateSmartContract": "Migrate Smart Contract",
    "minimumOutputRequired": "Minimum output required",
    "mint": "Mint",
    "mintNft": "Mint NFT",
    "nativeBalanceOverTime": "{{denomLabel}} balance over time",
    "navigation": "Navigation",
    "needWalletToContinue": "You'll need a wallet to continue",
    "newCompensationCycle": "New Compensation Cycle",
    "newDao": "New DAO",
    "newMember": "New member",
    "newProposal": "New proposal",
    "newProposalTo": "New proposal to...",
    "newSubDao": "New SubDAO",
    "nftCollection": "NFT Collection",
    "nfts": "NFTs",
    "noHistory": "No history",
    "noTitle": "No title",
    "noWinner": "No winner",
    "nominateContributor": "Nominate Contributor",
    "noneOfTheAbove": "None of the above",
    "notAMember": "Not a Member",
    "now": "Now",
    "numMembers_one": "{{count}} member",
    "numMembers_other": "{{count}} members",
    "numNfts_one": "{{count}} NFT",
    "numNfts_other": "{{count}} NFTs",
    "numNotifications_one": "{{count}} notification",
    "numNotifications_other": "{{count}} notifications",
    "numPendingItems_one": "{{count}} pending item",
    "numPendingItems_other": "{{count}} pending items",
    "numProposals_one": "{{count}} Proposal",
    "numProposals_other": "{{count}} Proposals",
    "numSubDaos_one": "{{count}} SubDAO",
    "numSubDaos_other": "{{count}} SubDAOs",
    "numTasks_one": "{{count}} task",
    "numTasks_other": "{{count}} tasks",
    "openProposals": "Open proposals",
    "other": "Other",
    "otherMembers": "Other Members",
    "owner": "Owner",
    "pages": "Pages",
    "passingThreshold": "Passing threshold",
    "payout": "Payout",
    "payroll": "Payroll",
    "percentTurnout": "{{value}} turnout",
    "posts": "Posts",
    "preferences": "Preferences",
    "preview": "Preview",
    "profile": "Profile",
    "projectedCompensation": "Projected compensation",
    "proposal": "Proposal",
    "proposalAllAbstain": "All abstain clarification",
    "proposalCreationInfo": "Proposal creation info",
    "proposalNotFound": "Proposal Not Found",
    "proposalTieClarification": "Tie clarification",
    "proposalType": "Proposal type",
    "proposals": "Proposals",
    "proposalsCreated": "Proposals created",
    "proposals_one": "Proposal",
    "proposals_other": "Proposals",
    "propose": "Propose",
    "proposer": "Proposer",
    "publicSubmissions": "Public Submissions",
    "push": "Push",
    "pushNotifications": "Push Notifications",
    "quorum": "Quorum",
    "ratioOfVotes": "Ratio of votes",
    "rawData": "Raw data",
    "recipient": "Recipient",
    "recognizeSubDao": "Recognize {{name}} SubDAO",
    "redelegate": "Redelegate",
    "refund": "Refund",
    "registerSlash": "Register slash",
    "relay": "Relay",
    "removeCw20FromTreasury": "Remove Token Balance from Treasury",
    "removeCw721FromTreasury": "Remove NFT Collection from Treasury",
    "removeItem": "Remove Item",
    "requestedRating": "Requested rating",
    "resetting": "Resetting...",
    "restake": "Restake",
    "retroactive": "Retroactive",
    "retroactiveCompensation": "Retroactive compensation",
    "reviewTransaction": "Review Transaction",
    "revoting": "Revoting",
    "saveTransaction": "Save transaction",
    "saved": "Saved",
    "scanQrCode": "Scan QR Code",
    "search": "Search",
    "selectNftToBurn": "Select NFT To Burn",
    "selectNftToTransfer": "Select NFT To Transfer",
    "send": "Send",
    "setItem": "Set Item",
    "setWithdrawAddress": "Set Withdraw Address",
    "signingAs": "Signing as",
    "slashAmountToRegister": "Slash amount to register",
    "sortBy": "Sort by",
    "spend": "Spend",
    "stake": "Stake",
    "staked": "Staked",
    "stakedNfts": "Staked NFTs",
    "stakedTo": "Staked to...",
    "staker": "Staker",
    "stakingModeNfts": {
      "claim": "Claim NFTs",
      "stake": "Stake NFTs",
      "stakeHeaderSubtitle": "Select the NFTs you want to stake from the NFT collection.",
      "unstake": "Unstake NFTs",
      "unstakeHeaderSubtitle": "Select the NFTs you want to unstake from the NFT collection."
    },
    "stargazeNames": "Stargaze Names",
    "start": "Start",
    "status": "Status",
    "subDaos": "SubDAOs",
    "submitGovernanceProposal": "Submit Governance Proposal",
    "success": "Success",
    "suggestions": "Suggestions",
    "summary": "Summary",
    "supplies": "Supplies",
    "swapTokensOnWynd": "Swap Tokens on WYND",
    "threshold": "Threshold",
    "tied": "Tied",
    "tierNum": "Tier {{tier}}",
    "timeLeft": "Time left",
    "timeRemaining": "Time remaining",
    "title": "Title",
    "token": "Token",
    "tokenSwap": "Token Swap",
    "topAbsolute": "Top {{count}}",
    "topPercent": "Top {{percent}}%",
    "topStakers": "Top Stakers",
    "total": "Total",
    "totalStaked": "Total staked",
    "totalSupply": "Total supply",
    "totalVested": "Total vested",
    "transaction": "Transaction",
    "transactionBuilder": "Transaction Builder",
    "transfer": "Transfer",
    "transferNft": "Transfer NFT",
    "treasury": "Treasury",
    "treasuryAndNfts": "Treasury & NFTs",
    "treasuryHistory": "Treasury history",
    "turnout": "Turnout",
    "twitter": "Twitter",
    "undelegate": "Undelegate",
    "underDevelopment": "Under development",
    "unjailValidator": "Unjail validator",
    "unregisteredSlashAmount": "Unregistered slash amount",
    "unstake": "Unstake",
    "unstakedNfts": "Unstaked NFTs",
    "unstaking": "Unstaking",
    "unstakingPeriod": "Unstaking period",
    "unstakingTokens": "Unstaking tokens",
    "upcoming": "Upcoming",
    "updateContractAdmin": "Update Contract Admin",
    "updateInfo": "Update Info",
    "updateMinterAllowance": "Update Minter Allowance",
    "updatePost": "Update Post",
    "upgradeToV2": "Upgrade to V2",
    "validatorActions": "Validator Actions",
    "verified": "Verified",
    "verifyEmail": "Verify Email",
    "vestedOfTotalPayment": "Vested / Total Payment",
    "vesting": "Vesting",
    "vestingCurve": "Vesting Curve",
    "vestingPayments": "Vesting Payments",
    "vetoThreshold": "Veto threshold",
    "visibility": "Visibility",
    "vote": "Vote",
    "voteOnGovernanceProposal": "Vote on Governance Proposal",
    "voteOptions": "Vote options",
    "voter": "Voter",
    "votesCast": "Votes cast",
    "votingClosed": "Voting closed",
    "votingConfiguration": "Voting configuration",
    "votingEnd": "Voting end",
    "votingOpened": "Voting opened",
    "votingPower": "Voting power",
    "votingProgress": "Voting Progress",
    "votingWeight": "Voting weight",
    "wallet": "Wallet",
    "walletConnect": "WalletConnect",
    "watchOut": "Watch out!",
    "website": "Website",
    "when": "When",
    "whoControlsDaoQuestion": "Who controls this DAO?",
    "winner": "Winner",
    "winningChoice": "Winning choice",
    "withdrawTokenSwap": "Withdraw Token Swap",
    "withdrawValidatorCommission": "Claim validator commission",
    "yourMembership": "Your membership",
    "yourNotifiers": "Your notifiers",
    "yourSubmission": "Your submission"
  },
  "unit": {
    "days": "Days",
    "days_one": "Day",
    "days_other": "Days",
    "hours": "Hours",
    "hours_one": "Hour",
    "hours_other": "Hours",
    "minutes": "Minutes",
    "minutes_one": "Minute",
    "minutes_other": "Minutes",
    "months": "Months",
    "months_one": "Month",
    "months_other": "Months",
    "seconds": "Seconds",
    "seconds_one": "Second",
    "seconds_other": "Seconds",
    "weeks": "Weeks",
    "weeks_one": "Week",
    "weeks_other": "Weeks",
    "years": "Years",
    "years_one": "Year",
    "years_other": "Years"
  },
  "widgetDescription": {
    "mint_nft": "Display an NFT collection with a button to mint new NFTs.",
    "press": "Publish posts to your DAO's press page.",
    "retroactive": "Reward contributors for work they've already done. Vote on how to distribute payments in regular cycles.",
    "vesting": "Vest funds to contributors at a constant rate, similar to a salary.",
    "wynd_deposit": "Deposit any token on WYND DEX into your DAO."
  },
  "widgetTitle": {
    "mint_nft": "Mint NFT",
    "press": "Press",
    "retroactive": "Retroactive Compensation",
    "vesting": "Vesting Payments",
    "wynd_deposit": "WYND Deposit"
  }
}
